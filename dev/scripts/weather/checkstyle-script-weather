#!/bin/bash
# Script to run checkstyle using custom checks on SUBDIR student submissions
# Acknowledgement - Rachel Cardell-Oliver for providing initial script that has been adapted

# Alex Bagini May, 2011

# Student folder
STU=$1    ; shift


# Variables

#Location of required files - jars and xml
TESTDIR=/home/alex/Dropbox/Uni-2011/Honours/dev/src-test
#Location of the student code
SUBDIR=/home/alex/student-code/WeatherRecord
#Location of the output for individual summaries
OUTDIR=/home/alex/output-weather

PROG=WeatherRecord

#Location of configuration XML file
CHECKXML=$TESTDIR/forcheck
#Location of checkstyle jar
CHECKSTYLE=$TESTDIR/checkstyle-5.3-all.jar
#Location of custom rules jar
CUSTOMRULES=$TESTDIR/update.jar

#Check student dir exists
STUDIR=$SUBDIR/submissions/$STU
if [ ! -d $STUDIR ] ; then
    echo "Directory $STUDIR not found"
    exit 1
fi

#Check output dir exists
if [ ! -d $OUTDIR ] ; then
	echo "Creating $OUTDIR"
	mkdir -m 777 $OUTDIR
fi

#Check student output dir exists
if [ ! -d $OUTDIR/$STU ] ; then
	echo "Created dir $OUTDIR/$STU"
	mkdir -m 777 $OUTDIR/$STU
fi

FEEDBACK=$OUTDIR/$STU/Feedback.txt
SUMMARY=$OUTDIR/total-summary.txt
FAILLIST=$OUTDIR/fail-list.txt
EXCLIST=$OUTDIR/exc-list.txt
MATRIX=/home/alex/Weather-Matrix.txt

echo "Marking $PROG for $STU at $(date +%Y-%m-%d" "%H:%M)" > $FEEDBACK #start a new feedback file

cd $STUDIR

#1. Check file exists
if [ ! -f $PROG.java ] ; then
   echo "$PROG.java not found. Please check file name and resubmit"
   exit 1
else
	echo "$PROG.java found"
	echo "$PROG.java file submitted." >> $FEEDBACK
fi


#2. Run checkstyle tests with custom java pattern checks
echo "Running Checkstyle with $CHECKXML.xml configuration." >> $FEEDBACK

#Output results to summary file
java -classpath $CUSTOMRULES:$CHECKSTYLE com.puppycrawl.tools.checkstyle.Main -c $CHECKXML.xml $PROG.java >> $SUMMARY	
#Output to student feedback file
java -classpath $CUSTOMRULES:$CHECKSTYLE com.puppycrawl.tools.checkstyle.Main -c $CHECKXML.xml $PROG.java >> $FEEDBACK


#Debug output for list of students where checks did not work correctly or simply they failed the checks
TEMP=`grep -c "Err_SFL_Fail" $FEEDBACK`
TEMP2=`grep -c "Got an exception" $FEEDBACK`

if [ $TEMP -gt 0 ] ; then
	echo $STU >> $FAILLIST
fi

if [ $TEMP2 -gt 0 ] ; then
	echo $STU >> $EXCLIST
fi

echo "Checkstyle test complete." >> $FEEDBACK


#Add check results to matrix


#Maximum
FM=`grep -c "Suc_SFL_For 'maximum'" $FEEDBACK`
FIM=`grep -c "Suc_SFL_ForInit 'maximum'" $FEEDBACK`
FCM=`grep -c "Suc_SFL_ForCond 'maximum'" $FEEDBACK`
LVM=`grep -c "Suc_SFL_LocalVar 'maximum'" $FEEDBACK`
FLV=`grep -c "Suc_SFL_ForLV 'maximum'" $FEEDBACK`
RM=`grep -c "Suc_SFL_Return 'maximum'" $FEEDBACK`
PM=`grep -c "Complete_Pass 'maximum'" $FEEDBACK`

echo -n $STU >>$MATRIX

LEN=`expr length "$STU"`

#extra tab for short names to align correctly
if [ $LEN -lt 8 ] ; then
	echo -ne "\t" >>$MATRIX
fi

if [ $PM -gt 0 ] ; then
	echo -ne "\t |Y" >> $MATRIX
else
	echo -ne "\t |N" >> $MATRIX
fi

if [ $FM -gt 0 ] ; then
	echo -ne "\t\t Y" >> $MATRIX
else
	echo -ne "\t\t N" >> $MATRIX
fi

if [ $FIM -gt 0 ] ; then
	echo -ne "\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t N" >> $MATRIX
fi

if [ $FCM -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $LVM -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $FLV -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $RM -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

#Minimum
FMi=`grep -c "Suc_SFL_For 'minimum'" $FEEDBACK`
FIMi=`grep -c "Suc_SFL_ForInit 'minimum'" $FEEDBACK`
FCMi=`grep -c "Suc_SFL_ForCond 'minimum'" $FEEDBACK`
LVMi=`grep -c "Suc_SFL_LocalVar 'minimum'" $FEEDBACK`
FLVi=`grep -c "Suc_SFL_ForLV 'minimum'" $FEEDBACK`
RMi=`grep -c "Suc_SFL_Return 'minimum'" $FEEDBACK`
PMi=`grep -c "Complete_Pass 'minimum'" $FEEDBACK`


if [ $PMi -gt 0 ] ; then
	echo -ne "\t\t\t\t|Y" >> $MATRIX
else
	echo -ne "\t\t\t\t|N" >> $MATRIX
fi


if [ $FMi -gt 0 ] ; then
	echo -ne "\t\t Y" >> $MATRIX
else
	echo -ne "\t\t N" >> $MATRIX
fi

if [ $FIMi -gt 0 ] ; then
	echo -ne "\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t N" >> $MATRIX
fi

if [ $FCMi -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $LVMi -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $FLVi -gt 0 ] ; then
	echo -ne "\t\t\t\t Y" >> $MATRIX
else
	echo -ne "\t\t\t\t N" >> $MATRIX
fi

if [ $RMi -gt 0 ] ; then
	echo -e "\t\t\t\t Y" >> $MATRIX
else
	echo -e "\t\t\t\t N" >> $MATRIX
fi



exit 0

